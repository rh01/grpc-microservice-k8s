// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gcd.proto

package pd

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GCDRequest struct {
	A                    uint64   `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    uint64   `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCDRequest) Reset()         { *m = GCDRequest{} }
func (m *GCDRequest) String() string { return proto.CompactTextString(m) }
func (*GCDRequest) ProtoMessage()    {}
func (*GCDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_178e0e204cde370a, []int{0}
}

func (m *GCDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCDRequest.Unmarshal(m, b)
}
func (m *GCDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCDRequest.Marshal(b, m, deterministic)
}
func (m *GCDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCDRequest.Merge(m, src)
}
func (m *GCDRequest) XXX_Size() int {
	return xxx_messageInfo_GCDRequest.Size(m)
}
func (m *GCDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GCDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GCDRequest proto.InternalMessageInfo

func (m *GCDRequest) GetA() uint64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *GCDRequest) GetB() uint64 {
	if m != nil {
		return m.B
	}
	return 0
}

type GCDResponse struct {
	Result               uint64   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCDResponse) Reset()         { *m = GCDResponse{} }
func (m *GCDResponse) String() string { return proto.CompactTextString(m) }
func (*GCDResponse) ProtoMessage()    {}
func (*GCDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_178e0e204cde370a, []int{1}
}

func (m *GCDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCDResponse.Unmarshal(m, b)
}
func (m *GCDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCDResponse.Marshal(b, m, deterministic)
}
func (m *GCDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCDResponse.Merge(m, src)
}
func (m *GCDResponse) XXX_Size() int {
	return xxx_messageInfo_GCDResponse.Size(m)
}
func (m *GCDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GCDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GCDResponse proto.InternalMessageInfo

func (m *GCDResponse) GetResult() uint64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*GCDRequest)(nil), "pd.GCDRequest")
	proto.RegisterType((*GCDResponse)(nil), "pd.GCDResponse")
}

func init() { proto.RegisterFile("gcd.proto", fileDescriptor_178e0e204cde370a) }

var fileDescriptor_178e0e204cde370a = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x4f, 0x4e, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x51, 0xd2, 0xe0, 0xe2, 0x72, 0x77, 0x76,
	0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe1, 0x62, 0x4c, 0x94, 0x60, 0x54, 0x60,
	0xd4, 0x60, 0x09, 0x62, 0x4c, 0x04, 0xf1, 0x92, 0x24, 0x98, 0x20, 0xbc, 0x24, 0x25, 0x55, 0x2e,
	0x6e, 0xb0, 0xca, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0xe2,
	0xd2, 0x9c, 0x12, 0xa8, 0x7a, 0x28, 0xcf, 0xc8, 0x02, 0x6c, 0x60, 0x70, 0x6a, 0x51, 0x59, 0x66,
	0x72, 0xaa, 0x90, 0x16, 0x17, 0xbb, 0x73, 0x7e, 0x6e, 0x41, 0x69, 0x49, 0xaa, 0x10, 0x9f, 0x5e,
	0x41, 0x8a, 0x1e, 0xc2, 0x2e, 0x29, 0x7e, 0x38, 0x1f, 0x62, 0x62, 0x12, 0x1b, 0xd8, 0x55, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0x7f, 0x97, 0xde, 0xa2, 0x00, 0x00, 0x00,
}
